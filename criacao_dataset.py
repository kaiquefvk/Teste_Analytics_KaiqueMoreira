# -*- coding: utf-8 -*-
"""Criacao_Dataset.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1A3LSAY6NTEJnX15y95-wZlgN3FlIc_GO
"""

!pip install pandas
!pip install datetime
!pip install Faker
!pip install matplotlib

import pandas as pd
import random
import datetime
from faker import Faker
import matplotlib.pyplot as plt
fake = Faker(locale='pt-BR')

def criar_funcao():
  #Criação das colunas do Dataset
  df = pd.DataFrame(columns= ['Categoria', 'Produto', 'Quantidade', 'Preço', 'Data'])

  #Criação de um dicionário com Categorias e Produtos
  categoria_e_produtos = {
      'Periféricos':  ['Mouse', 'Teclado', 'Headset', 'Mouse Pad'],
      'Monitores': ['75HZ', '100HZ', '180HZ'],
      'Hardwares': ['Placa de Vídeo', 'Placa Mãe', 'Fonte']
  }

  #Criação da lista para armazenação dos futuros valores
  lista = []

  #Escolha dos seed para os valores não mudarem a cada vez que o código é rodado
  random.seed(0)
  Faker.seed(0)

  #Loop de escolhas aleaórias para criação do Dataset, cada loop com o for, representa a criação de dados aleatórios para cada mês do ano
  for jan in range(55):
    categoria = random.choice(list(categoria_e_produtos.keys()))
    produto = random.choice(list(categoria_e_produtos[categoria]))
    quantidade = random.randint(1, 3)
    preco = round(random.uniform(55, 2000), 2)
    data = Faker().date_between(datetime.date(2023, 1, 1), datetime.date(2023, 1, 31))

    lista.append([categoria, produto, quantidade, preco, data])

  for fev in range(45):
    categoria = random.choice(list(categoria_e_produtos.keys()))
    produto = random.choice(list(categoria_e_produtos[categoria]))
    quantidade = random.randint(1, 1)
    preco = round(random.uniform(50, 2200), 2)
    data = Faker().date_between(datetime.date(2023, 2, 1), datetime.date(2023, 2, 28))

    lista.append([categoria, produto, quantidade, preco, data])

  for mar in range(45):
    categoria = random.choice(list(categoria_e_produtos.keys()))
    produto = random.choice(list(categoria_e_produtos[categoria]))
    quantidade = random.randint(1, 2)
    preco = round(random.uniform(40, 2100), 2)
    data = Faker().date_between(datetime.date(2023, 3, 1), datetime.date(2023, 3, 31))

    lista.append([categoria, produto, quantidade, preco, data])

  for abr in range(48):
    categoria = random.choice(list(categoria_e_produtos.keys()))
    produto = random.choice(list(categoria_e_produtos[categoria]))
    quantidade = random.randint(1, 2)
    preco = round(random.uniform(45, 2100), 2)
    data = Faker().date_between(datetime.date(2023, 4, 1), datetime.date(2023, 4, 30))

    lista.append([categoria, produto, quantidade, preco, data])

  for mai in range(45):
    categoria = random.choice(list(categoria_e_produtos.keys()))
    produto = random.choice(list(categoria_e_produtos[categoria]))
    quantidade = random.randint(1, 2)
    preco = round(random.uniform(40, 2100), 2)
    data = Faker().date_between(datetime.date(2023, 5, 1), datetime.date(2023, 5, 31))

    lista.append([categoria, produto, quantidade, preco, data])

  for jun in range(60):
    categoria = random.choice(list(categoria_e_produtos.keys()))
    produto = random.choice(list(categoria_e_produtos[categoria]))
    quantidade = random.randint(1, 3)
    preco = round(random.uniform(65, 2000), 2)
    data = Faker().date_between(datetime.date(2023, 6, 1), datetime.date(2023, 6, 30))

    lista.append([categoria, produto, quantidade, preco, data])

  for jul in range(50):
    categoria = random.choice(list(categoria_e_produtos.keys()))
    produto = random.choice(list(categoria_e_produtos[categoria]))
    quantidade = random.randint(1, 2)
    preco = round(random.uniform(40, 2000), 2)
    data = Faker().date_between(datetime.date(2023, 7, 1), datetime.date(2023, 7, 31))

    lista.append([categoria, produto, quantidade, preco, data])

  for ago in range(48):
    categoria = random.choice(list(categoria_e_produtos.keys()))
    produto = random.choice(list(categoria_e_produtos[categoria]))
    quantidade = random.randint(1, 2)
    preco = round(random.uniform(45, 2100), 2)
    data = Faker().date_between(datetime.date(2023, 8, 1), datetime.date(2023, 8, 31))

    lista.append([categoria, produto, quantidade, preco, data])

  for sete in range(45):
    categoria = random.choice(list(categoria_e_produtos.keys()))
    produto = random.choice(list(categoria_e_produtos[categoria]))
    quantidade = random.randint(1, 2)
    preco = round(random.uniform(40, 2100), 2)
    data = Faker().date_between(datetime.date(2023, 9, 1), datetime.date(2023, 9, 30))

    lista.append([categoria, produto, quantidade, preco, data])

  for out in range(45):
    categoria = random.choice(list(categoria_e_produtos.keys()))
    produto = random.choice(list(categoria_e_produtos[categoria]))
    quantidade = random.randint(1, 2)
    preco = round(random.uniform(40, 2100), 2)
    data = Faker().date_between(datetime.date(2023, 10, 1), datetime.date(2023, 10, 31))

    lista.append([categoria, produto, quantidade, preco, data])

  for nov in range(45):
    categoria = random.choice(list(categoria_e_produtos.keys()))
    produto = random.choice(list(categoria_e_produtos[categoria]))
    quantidade = random.randint(1, 2)
    preco = round(random.uniform(40, 2100), 2)
    data = Faker().date_between(datetime.date(2023, 11, 1), datetime.date(2023, 11, 30))

    lista.append([categoria, produto, quantidade, preco, data])

  for dez in range(65):
    categoria = random.choice(list(categoria_e_produtos.keys()))
    produto = random.choice(list(categoria_e_produtos[categoria]))
    quantidade = random.randint(1, 3)
    preco = round(random.uniform(45, 1700), 2)
    data = Faker().date_between(datetime.date(2023, 12, 1), datetime.date(2023, 12, 31))

    lista.append([categoria, produto, quantidade, preco, data])

  #Concatenção das colunas com os registros estabelecidos no Loop e armazenados na lista criada anteriormente
  df = pd.concat([df, pd.DataFrame(lista, columns = df.columns)])

  #Devido a ambiguidade de qual ID deveria ser criado (ID da compra, categoria ou produto), utilizei o Index para a criação do ID de cada compra
  #Resetei o Index para ele ser transafromado em coluna e depois renomeei o mesmo para "ID"
  df = df.reset_index()
  df = df.rename(columns={'index': 'ID'})
  return df

#Atribuindo a função a uma variável
df = criar_funcao()

#Mostrar as 5 primeiras linhas do DataFrame para ter noção de como ele se comporta
df.head()

#Conversão do tipo dos dados
df['Quantidade'] = df.Quantidade.astype('int32')
df['ID'] = df.ID.astype('int32')
df['Data'] = pd.to_datetime(df['Data'])
df.dtypes

#Averiguar se há null no DataFrame (Devido ao script de criação do Dataset, não há como ter null)
df.isnull().sum()

#Remover duplicatas (Devido ao script de criação do Dataset, não há como ter duplicatas)
df.drop_duplicates()

#Salvar o arquivo em csv
df.to_csv('data_clean.csv', index = False, encoding= 'utf-8')

#Excluir colunas para futuras análises
df_total = df.drop(['Categoria', 'ID', 'Data'], axis=1)

#Excluir colunas para futuras análises
df_total_2 = df.drop(['ID', 'Data', 'Produto'], axis=1)

#Agrupar cada Categoria pela Quantidade de UNIDADES vendida
#Categoria mais vendida foi Periféricos
df_total_2.groupby('Categoria')['Quantidade'].sum().sort_values(ascending = False)

#Criação da columa 'Total da Compra" para análise em relação a Categoria
df_total_2['Total_da_Compra'] = df_total['Quantidade'] * df_total['Preço']
df_total_2

#Ver qual Categoria teve a maior RENDA
#Os Periféricos possuem a maior renda
df_venda_2 = df_total_2.groupby('Categoria')['Total_da_Compra'].sum()
df_venda_2.sort_values(ascending = False)

#Conferindo se o motivo dos Periféricos serem os mais vendidos, é a média de preço
#O motivo dos Periféricos serem o mais vendido, pode ser por causa do seu valor, ja que possuem a menor média entre as outras categorias
df_total_2.groupby('Categoria')['Preço'].mean().sort_values(ascending = False)

#Criação da columa 'Total da Compra" para análise em relação ao Produtos
df_total['Total_da_Compra'] = df_total['Quantidade'] * df_total['Preço']
df_total

#Ver qual Produto teve a maior RECEITA
#O Mouse Pad foi o Produto que teve a maior RECEITA
df_venda = df_total.groupby('Produto')['Total_da_Compra'].sum()
df_venda.sort_values(ascending = False)

#Conferindo se o motivo do Monitor de 100HZ ser o mais vendido, foi seu preço
#O motivo aparentemente não foi seu preço
df_total.groupby('Produto')['Preço'].mean().sort_values(ascending = False)

#Ver qual Produto teve mais UNIDADES vendidas
#A Placa Mãe foi o produto que teve mais UNIDADES vendidas
df_quantidade_vendas = df_total.groupby('Produto')['Quantidade'].sum().sort_values(ascending = False)
df_quantidade_vendas

#Buscar alguma correlação entre as colunas
df_corr = df_total.drop(columns = 'Produto')
df_corr.corr()

#Agrupamento dos dados por meses
df_vendas_mensal = df.groupby(pd.Grouper(key='Data', freq='M')).sum() #Nessa linha de código, agrupei a Data por meses e somei as outras colunas, intuito de analisar a relação entre elas
df_vendas_mensal = df_vendas_mensal.drop(['Categoria', 'ID','Produto'], axis=1) #Dropei as colunas desnecessárias para a análise
df_vendas_mensal

#Plotando o Gráfico da Quantidade vendida em relação aos meses
df_plotagem_quantidade = df.groupby(pd.Grouper(key='Data', freq='M')).sum() #Nessa linha de código, eu atribui o agrupamento da coluna Data por meses e somei as outras colunas, com o intuito de plotagem
df_plotagem_quantidade = df_plotagem_quantidade.drop(['Categoria', 'ID','Produto', 'Preço'], axis=1) #Nessa linha dropei as colunas deixando apenas a Quantidade para ser analisada ao decorrer do ano
df_plotagem_quantidade.plot(marker = "o")

#Plotando o Gráfico do Preço vendida em relação aos meses
df_plotagem_preco = df.groupby(pd.Grouper(key='Data', freq='M')).sum() #Mesma lógica anterior
df_plotagem_preco = df_plotagem_preco.drop(['Categoria', 'ID','Produto', 'Quantidade'], axis=1)
df_plotagem_preco.plot(marker = 'o')

"""
* Analisando os dados, foi possível observar que existem 3 meses a se destacarem na quantidade de vendas e receita ao longo do ano, esses meses são: Janeiro, Junho e Dezembro.
Podemos chegar a conclusão de que essa alta no número de vendas, está relacionada ao período de férias das escolas e universidades.
* O mês de dezembro possui mais vendas do que o mês de junho, entretanto sua receita é um pouco menor, isso se deve ao fato de que no mês de dezembro, a empresa diminuiu o valor dos produtos,
a partir de promoções, como a Black Friday por exemplo.
* O mês de fevereiro foi um mês com poucas vendas, porém, possui uma receita que se compara com os outros meses. É notório se afirmar que a empresa lidou bem com a queda na quantidade de vendas,
aumentando o valor dos produtos nesse mês.
"""